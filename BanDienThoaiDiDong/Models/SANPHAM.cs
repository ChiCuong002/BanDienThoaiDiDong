//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BanDienThoaiDiDong.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SANPHAM
    {
        DB_DiDongEntities db = new DB_DiDongEntities();
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public SANPHAM()
        {
            this.ChiTietGHs = new HashSet<ChiTietGH>();
            this.CHITIETHDBANs = new HashSet<CHITIETHDBAN>();
        }
    
        public string MaSP { get; set; }
        public string TenSP { get; set; }
        public string Hinh { get; set; }
        public string MoTa { get; set; }
        public Nullable<int> MaLoai { get; set; }
        public Nullable<bool> HienThi { get; set; }
        public Nullable<int> SoLuong { get; set; }
        public Nullable<decimal> Gia { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ChiTietGH> ChiTietGHs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CHITIETHDBAN> CHITIETHDBANs { get; set; }
        public virtual LOAISANPHAM LOAISANPHAM { get; set; }
        public string GetDungLuong(string masp)
        {
            var id = masp.Substring(masp.IndexOf("m") + 1, masp.IndexOf("d") - masp.IndexOf("m"));
            var dungluong = db.Capacities.Where(s => s.MaCapacity == id).FirstOrDefault();
            return dungluong.DungLuong;
        }
        public string GetMau(string masp)
        {
            var maMau = masp.Substring(0, masp.IndexOf("m") + 1);
            var mau = db.Colors.Where(s => s.MaColor == maMau).FirstOrDefault();
            return mau.TenMau;
        }
        public string GetSeri(string masp)
        {
            var maSeri = masp.Substring(masp.IndexOf("d") + 1, masp.IndexOf("s") - masp.IndexOf("d"));
            var mau = db.Seris.Where(s => s.SeriMay == maSeri).FirstOrDefault();
            return mau.TenSeriMay;
        }
    }
}
