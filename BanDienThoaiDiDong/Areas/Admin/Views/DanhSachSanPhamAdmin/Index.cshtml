@model IEnumerable<BanDienThoaiDiDong.Models.SANPHAM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
     
}
 
    <div id="main" class="content">
        <div class="tb">
            <div class="add-product">
                <button>
                    @Html.ActionLink("Thêm", "Create")
                </button>
            </div>
            <h3>
                Danh sách sản phẩm
            </h3>
            <div class="tb-product">
                <div class="tb-product-item header">
                    <div class="tb-product-name">
                        <span>Tên</span>
                    </div>
                    <div class="tb-product-des">
                        <span>Mô tả</span>
                    </div>
                    <div class="tb-product-img">
                        <span>Ảnh</span>
                    </div>
                    <div class="tb-product-status">
                        <span>Trạng thái</span>
                    </div>
                    <div class="tb-product-type">
                        <span>Loại</span>
                    </div>
                    <div class="tb-product-acition">

                    </div>
                </div>
                @foreach (var item in Model)
                {
                    <!-- Từng sản phẩm -->
                    <div class="tb-product-item">
                        <div class="tb-product-name">
                            <span>@Html.DisplayFor(modelItem => item.TenSP)</span>
                        </div>
                        <div class="tb-product-des">
                            <span>@Html.DisplayFor(modelItem => item.MoTa)</span>
                        </div>
                        <div class="tb-product-img">
                            <img src="~/Images/@item.Hinh" alt="">
                        </div>
                        <div class="tb-product-status">
                            <span>@Html.DisplayFor(modelItem => item.Gia)</span>
                        </div>
                        <div class="tb-product-type">
                            <span>@Html.DisplayFor(modelItem => item.LOAISANPHAM.TenLoai)</span>
                        </div>
                        <div class="">
                            <i class="fas fa-edit">
                                @Html.ActionLink("Edit", "Edit", new { id = item.MaSP }) |
                            </i>
                            <i class="fas fa-plus">
                                @Html.ActionLink("Details", "Details", new { id = item.MaSP }) |
                            </i>
                            <i class="fas fa-trash-alt">
                                @Html.ActionLink("Delete", "Delete", new { id = item.MaSP })
                            </i>
                        </div>
                    </div>
                    <!-- Kết thúc từng sản phẩm -->
                }
                </div>
        </div>
        <script>
            const btnElm = document.getElementById("show");
            let isRotated = false;
            let isExpanded = false;
            btnElm.addEventListener("click", (e) => {
                setTimeout(() => {
                    document.querySelectorAll("body > aside > div.sidebar-content > a > span").forEach((item) => {
                        item.classList.toggle('none');
                    })
                }, 300);
                document.getElementsByTagName("header")[0].classList.toggle("togger");
                document.getElementById("main").classList.toggle("togger");
                document.getElementsByTagName("aside")[0].classList.toggle("aside-togger");

                if (isRotated) {
                    btnElm.style.transform = 'rotate(0deg)';
                    isRotated = false;
                } else {
                    btnElm.style.transform = 'rotate(-180deg)';
                    isRotated = true;
                }

                if (isExpanded) {
                    box.style.width = '5.2rem';
                    isExpanded = false;
                } else {
                    box.style.width = '16rem';
                    isExpanded = true;
                }

            });
            var navElm = document.getElementsByClassName('nav')[0];
            navElm.addEventListener('click', (e) => {

                document.getElementsByClassName('nav-content')[0].classList.remove('none');

                document.addEventListener('click', function (event) {
                    const outsideClick = !document.getElementsByClassName('nav')[0].contains(event.target);
                    if (outsideClick) {
                        document.getElementsByClassName('nav-content')[0].classList.add('none');
                    }
                });
            });
        </script>

         


 
 
 